# coding: utf-8

"""
    Qualtrics Survey API

    The Qualtrics Survey endpoints give you access to the structure of the surveys you create.   Surveys have a complex structure, and you are encouraged to become familiar with the structure using your brand's Qualtrics page to build surveys at first. Then you can query those surveys using these endpoints.   Once you are familiar, you can use this API to create surveys on the fly, or modify existing surveys in your library. 

    The version of the OpenAPI document: 3.0.0
    Created by: https://www.qualtrics.com/support/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from qualtrics_survey_python_sdk import schemas  # noqa: F401


class QuestionType(
    schemas.EnumBase,
    schemas.StrSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    The type of question.
    """
    
    @schemas.classproperty
    def MC(cls):
        return cls("MC")
    
    @schemas.classproperty
    def MATRIX(cls):
        return cls("Matrix")
    
    @schemas.classproperty
    def CAPTCHA(cls):
        return cls("Captcha")
    
    @schemas.classproperty
    def CS(cls):
        return cls("CS")
    
    @schemas.classproperty
    def DB(cls):
        return cls("DB")
    
    @schemas.classproperty
    def DD(cls):
        return cls("DD")
    
    @schemas.classproperty
    def DRAW(cls):
        return cls("Draw")
    
    @schemas.classproperty
    def DYNAMIC_MATRIX(cls):
        return cls("DynamicMatrix")
    
    @schemas.classproperty
    def FILE_UPLOAD(cls):
        return cls("FileUpload")
    
    @schemas.classproperty
    def GAP(cls):
        return cls("GAP")
    
    @schemas.classproperty
    def HEAT_MAP(cls):
        return cls("HeatMap")
    
    @schemas.classproperty
    def HL(cls):
        return cls("HL")
    
    @schemas.classproperty
    def HOT_SPOT(cls):
        return cls("HotSpot")
    
    @schemas.classproperty
    def META(cls):
        return cls("Meta")
    
    @schemas.classproperty
    def PGR(cls):
        return cls("PGR")
    
    @schemas.classproperty
    def RO(cls):
        return cls("RO")
    
    @schemas.classproperty
    def SBS(cls):
        return cls("SBS")
    
    @schemas.classproperty
    def SLIDER(cls):
        return cls("Slider")
    
    @schemas.classproperty
    def SS(cls):
        return cls("SS")
    
    @schemas.classproperty
    def TE(cls):
        return cls("TE")
    
    @schemas.classproperty
    def TIMING(cls):
        return cls("Timing")
    
    @schemas.classproperty
    def TREE_SELECT(cls):
        return cls("TreeSelect")
