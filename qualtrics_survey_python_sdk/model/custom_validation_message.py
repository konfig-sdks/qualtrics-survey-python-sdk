# coding: utf-8

"""
    Qualtrics Survey API

    The Qualtrics Survey endpoints give you access to the structure of the surveys you create.   Surveys have a complex structure, and you are encouraged to become familiar with the structure using your brand's Qualtrics page to build surveys at first. Then you can query those surveys using these endpoints.   Once you are familiar, you can use this API to create surveys on the fly, or modify existing surveys in your library. 

    The version of the OpenAPI document: 3.0.0
    Created by: https://www.qualtrics.com/support/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from qualtrics_survey_python_sdk import schemas  # noqa: F401


class CustomValidationMessage(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Message to display when respondents don't fulfill the validation
    """


    class MetaOapg:
        required = {
            "libraryID",
            "messageID",
            "subMessageID",
        }
        
        class properties:
        
            @staticmethod
            def libraryID() -> typing.Type['LibraryID']:
                return LibraryID
        
            @staticmethod
            def messageID() -> typing.Type['MessageID']:
                return MessageID
            
            
            class subMessageID(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "VE_FORCE_RESPONSE": "FORCE_RESPONSE",
                        "VE_FORCE_RESPONSE_PLURAL": "FORCE_RESPONSE_PLURAL",
                        "VE_FORCE_RESPONSE_MORE": "FORCE_RESPONSE_MORE",
                        "VE_FORCE_RESPONSE_OTHER": "FORCE_RESPONSE_OTHER",
                        "VE_MIN_CHOICES": "MIN_CHOICES",
                        "VE_MAX_CHOICES": "MAX_CHOICES",
                        "VE_MAX_CHOICES_PGR": "MAX_CHOICES_PGR",
                        "VE_MIN_CHOICES_MATRIX": "MIN_CHOICES_MATRIX",
                        "VE_MAX_CHOICES_MATRIX": "MAX_CHOICES_MATRIX",
                        "VE_MIN_CHOICES_HLText": "MIN_CHOICES_HLTEXT",
                        "VE_MAX_CHOICES_HLText": "MAX_CHOICES_HLTEXT",
                        "VE_INCORRECT_TOTAL": "INCORRECT_TOTAL",
                        "VE_TOO_MANY_CHARACTERS": "TOO_MANY_CHARACTERS",
                        "VE_TOO_MANY_CHARACTERS_PLURAL": "TOO_MANY_CHARACTERS_PLURAL",
                        "VE_TOO_FEW_CHARACTERS": "TOO_FEW_CHARACTERS",
                        "VE_TOO_FEW_CHARACTERS_PLURAL": "TOO_FEW_CHARACTERS_PLURAL",
                        "VE_NOT_CONSECUTIVE": "NOT_CONSECUTIVE",
                        "VE_NOT_CONSECUTIVE_RANGE": "NOT_CONSECUTIVE_RANGE",
                        "VE_VALIDATION_FAILED": "VALIDATION_FAILED",
                        "VE_VALIDUSSTATE": "VALIDUSSTATE",
                        "VE_VALIDCAPHONE": "VALIDCAPHONE",
                        "VE_VALIDUKPHONE": "VALIDUKPHONE",
                        "VE_VALIDUKZIP": "VALIDUKZIP",
                        "VE_VALIDAUPHONE": "VALIDAUPHONE",
                        "VE_VALIDNLPHONE": "VALIDNLPHONE",
                        "VE_VALIDNZPHONE": "VALIDNZPHONE",
                        "VE_VALIDAUZIP": "VALIDAUZIP",
                        "VE_VALIDNZZIP": "VALIDNZZIP",
                        "VE_VALIDNLZIP": "VALIDNLZIP",
                        "VE_VALIDUSZIP": "VALIDUSZIP",
                        "VE_VALIDCAZIP": "VALIDCAZIP",
                        "VE_VALIDDATE": "VALIDDATE",
                        "VE_VALIDALTDATE": "VALIDALTDATE",
                        "VE_VALIDINTLDATE": "VALIDINTLDATE",
                        "VE_VALIDNUMBER": "VALIDNUMBER",
                        "VE_VALIDTEXTONLY": "VALIDTEXTONLY",
                        "VE_VALIDUSSTATE_PLURAL": "VALIDUSSTATE_PLURAL",
                        "VE_VALIDEMAIL_PLURAL": "VALIDEMAIL_PLURAL",
                        "VE_VALIDUSPHONE_PLURAL": "VALIDUSPHONE_PLURAL",
                        "VE_VALIDUSZIP_PLURAL": "VALIDUSZIP_PLURAL",
                        "VE_VALIDDATE_PLURAL": "VALIDDATE_PLURAL",
                        "VE_VALIDNUMBER_PLURAL": "VALIDNUMBER_PLURAL",
                        "VE_VALIDTEXTONLY_PLURAL": "VALIDTEXTONLY_PLURAL",
                        "VE_VALIDEXTENSIONS": "VALIDEXTENSIONS",
                        "VE_VALIDPDF": "VALIDPDF",
                        "VE_VALIDDOCUMENT": "VALIDDOCUMENT",
                        "VE_VALIDEMAIL": "VALIDEMAIL",
                        "VE_VALIDSPREADSHEET": "VALIDSPREADSHEET",
                        "VE_VALIDGRAPHIC": "VALIDGRAPHIC",
                        "VE_VALIDUPLOAD": "VALIDUPLOAD",
                        "VE_VALIDSCREENCAPTURE": "VALIDSCREENCAPTURE",
                        "VE_TEXT_ENTRY_HAS_VALUE_BUT_NOT_CHECKED": "TEXT_ENTRY_HAS_VALUE_BUT_NOT_CHECKED",
                        "VE_TEXT_ENTRY_HAS_VALUE_BUT_NOT_RANKED": "TEXT_ENTRY_HAS_VALUE_BUT_NOT_RANKED",
                        "VE_SELECT_LEAST_MOST_PREFERRED": "SELECT_LEAST_MOST_PREFERRED",
                        "VE_SELECT_LEAST_MOST_LEVEL": "SELECT_LEAST_MOST_LEVEL",
                        "VE_SELECT_MOST_VALUE_UPGRADE": "SELECT_MOST_VALUE_UPGRADE",
                        "VE_SELECT_VALUABLE_LEVEL": "SELECT_VALUABLE_LEVEL",
                        "VE_IMPORTANCE_TOTAL": "IMPORTANCE_TOTAL",
                        "VE_MIN_GROUP_CHOICES": "MIN_GROUP_CHOICES",
                        "VE_MAX_GROUP_CHOICES": "MAX_GROUP_CHOICES",
                        "VE_VALIDNUMBER_MIN": "VALIDNUMBER_MIN",
                        "VE_VALIDNUMBER_MAX": "VALIDNUMBER_MAX",
                        "VE_VALIDMIN_PLURAL": "VALIDMIN_PLURAL",
                        "VE_VALIDMAX_PLURAL": "VALIDMAX_PLURAL",
                        "VE_VALIDNUMBER_NUM_DECIMALS": "VALIDNUMBER_NUM_DECIMALS",
                        "VE_FORCE_OTHER_RESPONSE": "FORCE_OTHER_RESPONSE",
                        "VE_HEADER_VALIDATION_MESSAGE": "HEADER_VALIDATION_MESSAGE",
                        "VE_CUSTOM_VALIDATION_NO_MESSAGE": "CUSTOM_VALIDATION_NO_MESSAGE",
                        "VE_CUSTOM_VALIDATION_NOT_APPLIED": "CUSTOM_VALIDATION_NOT_APPLIED",
                        "VE_QUESTION": "QUESTION",
                        "VE_ERROR": "ERROR",
                        "VE_INCORRECT_CAPTCHA_RESPONSE": "INCORRECT_CAPTCHA_RESPONSE",
                        "VE_MULTIPLE_CHOICES": "MULTIPLE_CHOICES",
                    }
                
                @schemas.classproperty
                def FORCE_RESPONSE(cls):
                    return cls("VE_FORCE_RESPONSE")
                
                @schemas.classproperty
                def FORCE_RESPONSE_PLURAL(cls):
                    return cls("VE_FORCE_RESPONSE_PLURAL")
                
                @schemas.classproperty
                def FORCE_RESPONSE_MORE(cls):
                    return cls("VE_FORCE_RESPONSE_MORE")
                
                @schemas.classproperty
                def FORCE_RESPONSE_OTHER(cls):
                    return cls("VE_FORCE_RESPONSE_OTHER")
                
                @schemas.classproperty
                def MIN_CHOICES(cls):
                    return cls("VE_MIN_CHOICES")
                
                @schemas.classproperty
                def MAX_CHOICES(cls):
                    return cls("VE_MAX_CHOICES")
                
                @schemas.classproperty
                def MAX_CHOICES_PGR(cls):
                    return cls("VE_MAX_CHOICES_PGR")
                
                @schemas.classproperty
                def MIN_CHOICES_MATRIX(cls):
                    return cls("VE_MIN_CHOICES_MATRIX")
                
                @schemas.classproperty
                def MAX_CHOICES_MATRIX(cls):
                    return cls("VE_MAX_CHOICES_MATRIX")
                
                @schemas.classproperty
                def MIN_CHOICES_HLTEXT(cls):
                    return cls("VE_MIN_CHOICES_HLText")
                
                @schemas.classproperty
                def MAX_CHOICES_HLTEXT(cls):
                    return cls("VE_MAX_CHOICES_HLText")
                
                @schemas.classproperty
                def INCORRECT_TOTAL(cls):
                    return cls("VE_INCORRECT_TOTAL")
                
                @schemas.classproperty
                def TOO_MANY_CHARACTERS(cls):
                    return cls("VE_TOO_MANY_CHARACTERS")
                
                @schemas.classproperty
                def TOO_MANY_CHARACTERS_PLURAL(cls):
                    return cls("VE_TOO_MANY_CHARACTERS_PLURAL")
                
                @schemas.classproperty
                def TOO_FEW_CHARACTERS(cls):
                    return cls("VE_TOO_FEW_CHARACTERS")
                
                @schemas.classproperty
                def TOO_FEW_CHARACTERS_PLURAL(cls):
                    return cls("VE_TOO_FEW_CHARACTERS_PLURAL")
                
                @schemas.classproperty
                def NOT_CONSECUTIVE(cls):
                    return cls("VE_NOT_CONSECUTIVE")
                
                @schemas.classproperty
                def NOT_CONSECUTIVE_RANGE(cls):
                    return cls("VE_NOT_CONSECUTIVE_RANGE")
                
                @schemas.classproperty
                def VALIDATION_FAILED(cls):
                    return cls("VE_VALIDATION_FAILED")
                
                @schemas.classproperty
                def VALIDUSSTATE(cls):
                    return cls("VE_VALIDUSSTATE")
                
                @schemas.classproperty
                def VALIDCAPHONE(cls):
                    return cls("VE_VALIDCAPHONE")
                
                @schemas.classproperty
                def VALIDUKPHONE(cls):
                    return cls("VE_VALIDUKPHONE")
                
                @schemas.classproperty
                def VALIDUKZIP(cls):
                    return cls("VE_VALIDUKZIP")
                
                @schemas.classproperty
                def VALIDAUPHONE(cls):
                    return cls("VE_VALIDAUPHONE")
                
                @schemas.classproperty
                def VALIDNLPHONE(cls):
                    return cls("VE_VALIDNLPHONE")
                
                @schemas.classproperty
                def VALIDNZPHONE(cls):
                    return cls("VE_VALIDNZPHONE")
                
                @schemas.classproperty
                def VALIDAUZIP(cls):
                    return cls("VE_VALIDAUZIP")
                
                @schemas.classproperty
                def VALIDNZZIP(cls):
                    return cls("VE_VALIDNZZIP")
                
                @schemas.classproperty
                def VALIDNLZIP(cls):
                    return cls("VE_VALIDNLZIP")
                
                @schemas.classproperty
                def VALIDUSZIP(cls):
                    return cls("VE_VALIDUSZIP")
                
                @schemas.classproperty
                def VALIDCAZIP(cls):
                    return cls("VE_VALIDCAZIP")
                
                @schemas.classproperty
                def VALIDDATE(cls):
                    return cls("VE_VALIDDATE")
                
                @schemas.classproperty
                def VALIDALTDATE(cls):
                    return cls("VE_VALIDALTDATE")
                
                @schemas.classproperty
                def VALIDINTLDATE(cls):
                    return cls("VE_VALIDINTLDATE")
                
                @schemas.classproperty
                def VALIDNUMBER(cls):
                    return cls("VE_VALIDNUMBER")
                
                @schemas.classproperty
                def VALIDTEXTONLY(cls):
                    return cls("VE_VALIDTEXTONLY")
                
                @schemas.classproperty
                def VALIDUSSTATE_PLURAL(cls):
                    return cls("VE_VALIDUSSTATE_PLURAL")
                
                @schemas.classproperty
                def VALIDEMAIL_PLURAL(cls):
                    return cls("VE_VALIDEMAIL_PLURAL")
                
                @schemas.classproperty
                def VALIDUSPHONE_PLURAL(cls):
                    return cls("VE_VALIDUSPHONE_PLURAL")
                
                @schemas.classproperty
                def VALIDUSZIP_PLURAL(cls):
                    return cls("VE_VALIDUSZIP_PLURAL")
                
                @schemas.classproperty
                def VALIDDATE_PLURAL(cls):
                    return cls("VE_VALIDDATE_PLURAL")
                
                @schemas.classproperty
                def VALIDNUMBER_PLURAL(cls):
                    return cls("VE_VALIDNUMBER_PLURAL")
                
                @schemas.classproperty
                def VALIDTEXTONLY_PLURAL(cls):
                    return cls("VE_VALIDTEXTONLY_PLURAL")
                
                @schemas.classproperty
                def VALIDEXTENSIONS(cls):
                    return cls("VE_VALIDEXTENSIONS")
                
                @schemas.classproperty
                def VALIDPDF(cls):
                    return cls("VE_VALIDPDF")
                
                @schemas.classproperty
                def VALIDDOCUMENT(cls):
                    return cls("VE_VALIDDOCUMENT")
                
                @schemas.classproperty
                def VALIDEMAIL(cls):
                    return cls("VE_VALIDEMAIL")
                
                @schemas.classproperty
                def VALIDSPREADSHEET(cls):
                    return cls("VE_VALIDSPREADSHEET")
                
                @schemas.classproperty
                def VALIDGRAPHIC(cls):
                    return cls("VE_VALIDGRAPHIC")
                
                @schemas.classproperty
                def VALIDUPLOAD(cls):
                    return cls("VE_VALIDUPLOAD")
                
                @schemas.classproperty
                def VALIDSCREENCAPTURE(cls):
                    return cls("VE_VALIDSCREENCAPTURE")
                
                @schemas.classproperty
                def TEXT_ENTRY_HAS_VALUE_BUT_NOT_CHECKED(cls):
                    return cls("VE_TEXT_ENTRY_HAS_VALUE_BUT_NOT_CHECKED")
                
                @schemas.classproperty
                def TEXT_ENTRY_HAS_VALUE_BUT_NOT_RANKED(cls):
                    return cls("VE_TEXT_ENTRY_HAS_VALUE_BUT_NOT_RANKED")
                
                @schemas.classproperty
                def SELECT_LEAST_MOST_PREFERRED(cls):
                    return cls("VE_SELECT_LEAST_MOST_PREFERRED")
                
                @schemas.classproperty
                def SELECT_LEAST_MOST_LEVEL(cls):
                    return cls("VE_SELECT_LEAST_MOST_LEVEL")
                
                @schemas.classproperty
                def SELECT_MOST_VALUE_UPGRADE(cls):
                    return cls("VE_SELECT_MOST_VALUE_UPGRADE")
                
                @schemas.classproperty
                def SELECT_VALUABLE_LEVEL(cls):
                    return cls("VE_SELECT_VALUABLE_LEVEL")
                
                @schemas.classproperty
                def IMPORTANCE_TOTAL(cls):
                    return cls("VE_IMPORTANCE_TOTAL")
                
                @schemas.classproperty
                def MIN_GROUP_CHOICES(cls):
                    return cls("VE_MIN_GROUP_CHOICES")
                
                @schemas.classproperty
                def MAX_GROUP_CHOICES(cls):
                    return cls("VE_MAX_GROUP_CHOICES")
                
                @schemas.classproperty
                def VALIDNUMBER_MIN(cls):
                    return cls("VE_VALIDNUMBER_MIN")
                
                @schemas.classproperty
                def VALIDNUMBER_MAX(cls):
                    return cls("VE_VALIDNUMBER_MAX")
                
                @schemas.classproperty
                def VALIDMIN_PLURAL(cls):
                    return cls("VE_VALIDMIN_PLURAL")
                
                @schemas.classproperty
                def VALIDMAX_PLURAL(cls):
                    return cls("VE_VALIDMAX_PLURAL")
                
                @schemas.classproperty
                def VALIDNUMBER_NUM_DECIMALS(cls):
                    return cls("VE_VALIDNUMBER_NUM_DECIMALS")
                
                @schemas.classproperty
                def FORCE_OTHER_RESPONSE(cls):
                    return cls("VE_FORCE_OTHER_RESPONSE")
                
                @schemas.classproperty
                def HEADER_VALIDATION_MESSAGE(cls):
                    return cls("VE_HEADER_VALIDATION_MESSAGE")
                
                @schemas.classproperty
                def CUSTOM_VALIDATION_NO_MESSAGE(cls):
                    return cls("VE_CUSTOM_VALIDATION_NO_MESSAGE")
                
                @schemas.classproperty
                def CUSTOM_VALIDATION_NOT_APPLIED(cls):
                    return cls("VE_CUSTOM_VALIDATION_NOT_APPLIED")
                
                @schemas.classproperty
                def QUESTION(cls):
                    return cls("VE_QUESTION")
                
                @schemas.classproperty
                def ERROR(cls):
                    return cls("VE_ERROR")
                
                @schemas.classproperty
                def INCORRECT_CAPTCHA_RESPONSE(cls):
                    return cls("VE_INCORRECT_CAPTCHA_RESPONSE")
                
                @schemas.classproperty
                def MULTIPLE_CHOICES(cls):
                    return cls("VE_MULTIPLE_CHOICES")
            description = schemas.StrSchema
            __annotations__ = {
                "libraryID": libraryID,
                "messageID": messageID,
                "subMessageID": subMessageID,
                "description": description,
            }
        additional_properties = schemas.AnyTypeSchema
    
    libraryID: 'LibraryID'
    messageID: 'MessageID'
    subMessageID: MetaOapg.properties.subMessageID
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["libraryID"]) -> 'LibraryID': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["messageID"]) -> 'MessageID': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["subMessageID"]) -> MetaOapg.properties.subMessageID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["libraryID"], typing_extensions.Literal["messageID"], typing_extensions.Literal["subMessageID"], typing_extensions.Literal["description"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["libraryID"]) -> 'LibraryID': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["messageID"]) -> 'MessageID': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["subMessageID"]) -> MetaOapg.properties.subMessageID: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["libraryID"], typing_extensions.Literal["messageID"], typing_extensions.Literal["subMessageID"], typing_extensions.Literal["description"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        libraryID: 'LibraryID',
        messageID: 'MessageID',
        subMessageID: typing.Union[MetaOapg.properties.subMessageID, str, ],
        description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'CustomValidationMessage':
        return super().__new__(
            cls,
            *args,
            libraryID=libraryID,
            messageID=messageID,
            subMessageID=subMessageID,
            description=description,
            _configuration=_configuration,
            **kwargs,
        )

from qualtrics_survey_python_sdk.model.library_id import LibraryID
from qualtrics_survey_python_sdk.model.message_id import MessageID
