# coding: utf-8

"""
    Qualtrics Survey API

    The Qualtrics Survey endpoints give you access to the structure of the surveys you create.   Surveys have a complex structure, and you are encouraged to become familiar with the structure using your brand's Qualtrics page to build surveys at first. Then you can query those surveys using these endpoints.   Once you are familiar, you can use this API to create surveys on the fly, or modify existing surveys in your library. 

    The version of the OpenAPI document: 3.0.0
    Created by: https://www.qualtrics.com/support/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from qualtrics_survey_python_sdk import schemas  # noqa: F401


class ComparisonOperators(
    schemas.EnumBase,
    schemas.StrSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Comparison operators.
    """


    class MetaOapg:
        enum_value_to_name = {
            "EqualTo": "EQUAL_TO",
            "NotEqualTo": "NOT_EQUAL_TO",
            "Empty": "EMPTY",
            "NotEmpty": "NOT_EMPTY",
            "GreaterThan": "GREATER_THAN",
            "GreaterThanOrEqual": "GREATER_THAN_OR_EQUAL",
            "LessThan": "LESS_THAN",
            "LessThanOrEqual": "LESS_THAN_OR_EQUAL",
            "Contains": "CONTAINS",
            "DoesNotContain": "DOES_NOT_CONTAIN",
            "MatchesRegex": "MATCHES_REGEX",
            "Is": "IS",
            "IsNot": "IS_NOT",
            "In": "IN",
            "InOrBelow": "IN_OR_BELOW",
            "SameAsSubject": "SAME_AS_SUBJECT",
        }
    
    @schemas.classproperty
    def EQUAL_TO(cls):
        return cls("EqualTo")
    
    @schemas.classproperty
    def NOT_EQUAL_TO(cls):
        return cls("NotEqualTo")
    
    @schemas.classproperty
    def EMPTY(cls):
        return cls("Empty")
    
    @schemas.classproperty
    def NOT_EMPTY(cls):
        return cls("NotEmpty")
    
    @schemas.classproperty
    def GREATER_THAN(cls):
        return cls("GreaterThan")
    
    @schemas.classproperty
    def GREATER_THAN_OR_EQUAL(cls):
        return cls("GreaterThanOrEqual")
    
    @schemas.classproperty
    def LESS_THAN(cls):
        return cls("LessThan")
    
    @schemas.classproperty
    def LESS_THAN_OR_EQUAL(cls):
        return cls("LessThanOrEqual")
    
    @schemas.classproperty
    def CONTAINS(cls):
        return cls("Contains")
    
    @schemas.classproperty
    def DOES_NOT_CONTAIN(cls):
        return cls("DoesNotContain")
    
    @schemas.classproperty
    def MATCHES_REGEX(cls):
        return cls("MatchesRegex")
    
    @schemas.classproperty
    def IS(cls):
        return cls("Is")
    
    @schemas.classproperty
    def IS_NOT(cls):
        return cls("IsNot")
    
    @schemas.classproperty
    def IN(cls):
        return cls("In")
    
    @schemas.classproperty
    def IN_OR_BELOW(cls):
        return cls("InOrBelow")
    
    @schemas.classproperty
    def SAME_AS_SUBJECT(cls):
        return cls("SameAsSubject")
